From mhallster+caf_=mark_andrew_hall=fastmail.fm@gmail.com Fri Jun 29 15:35:20 2007
Return-Path: <mhallster+caf_=mark_andrew_hall=fastmail.fm@gmail.com>
Received: from compute2.internal (compute2.internal [10.202.2.42])
	 by store36m.internal (Cyrus v2.3.8-fmsvn11630) with LMTPA;
	 Thu, 28 Jun 2007 23:35:20 -0400
X-Sieve: CMU Sieve 2.3
X-Spam-score: 0.0
X-Spam-hits: BAYES_00 -0.7, SPF_PASS -0.001
X-Spam-source: IP='64.233.184.239', Country='US', FromHeader='nz', MailFrom='com'
X-Attached: Re: Offering Weka Code.eml
X-Attached: Attached Message
X-Attached: ClassifierPanel.java.patch
X-Attached: VisualizePlugin.java
X-Resolved-to: mark_andrew_hall@fastmail.fm
X-Delivered-to: mark_andrew_hall@fastmail.fm
X-Mail-from: mhallster+caf_=mark_andrew_hall=fastmail.fm@gmail.com
Received: from wr-out-0506.google.com (wr-out-0506.google.com [64.233.184.239])
	by mx6.messagingengine.com (Postfix) with ESMTP id 917434355A
	for <mark_andrew_hall@fastmail.fm>; Thu, 28 Jun 2007 23:35:14 -0400 (EDT)
Received: by wr-out-0506.google.com with SMTP id 50so733384wri
        for <mark_andrew_hall@fastmail.fm>; Thu, 28 Jun 2007 20:35:14 -0700 (PDT)
Received: by 10.142.158.17 with SMTP id g17mr154271wfe.1183088114024;
        Thu, 28 Jun 2007 20:35:14 -0700 (PDT)
X-Forwarded-To: mark_andrew_hall@fastmail.fm
X-Forwarded-For: mhallster@gmail.com mark_andrew_hall@fastmail.fm
Delivered-To: mhallster@gmail.com
Received: by 10.142.116.7 with SMTP id o7cs203116wfc;
        Thu, 28 Jun 2007 20:35:13 -0700 (PDT)
Received: by 10.115.55.1 with SMTP id h1mr2200870wak.1183088113640;
        Thu, 28 Jun 2007 20:35:13 -0700 (PDT)
Received: from zombie.scms.waikato.ac.nz (mail.scms.waikato.ac.nz [130.217.241.36])
        by mx.google.com with ESMTP id a8si9118622poa.2007.06.28.20.35.12;
        Thu, 28 Jun 2007 20:35:13 -0700 (PDT)
Received-SPF: pass (google.com: domain of SRS0=Zwt2mF=L5=waikato.ac.nz=fracpete@cs.waikato.ac.nz designates 130.217.241.36 as permitted sender)
Received: from mail by zombie.scms.waikato.ac.nz with spam-scanned (Exim 4.52)
	id 1I47GI-0002IS-IR
	for mhall@cs.waikato.ac.nz; Fri, 29 Jun 2007 15:35:11 +1200
Received: from smtp.waikato.ac.nz ([130.217.66.62])
	by zombie.scms.waikato.ac.nz with esmtp (Exim 4.52)
	id 1I47GI-0002IO-GX
	for mhall@cs.waikato.ac.nz; Fri, 29 Jun 2007 15:35:10 +1200
Received: from [130.217.43.1] (h11001.dynamic.waikato.ac.nz [130.217.43.1])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by clint.its.waikato.ac.nz (Postfix) with ESMTP id 73486E04FBF
	for <mhall@cs.waikato.ac.nz>; Fri, 29 Jun 2007 15:35:10 +1200 (NZST)
Message-ID: <46847DFA.1000201@waikato.ac.nz>
Date: Fri, 29 Jun 2007 15:35:22 +1200
From: Peter Reutemann <fracpete@waikato.ac.nz>
User-Agent: Thunderbird 2.0.0.4 (Windows/20070604)
MIME-Version: 1.0
To: Mark Hall <mhall@cs.waikato.ac.nz>
Subject: [Fwd: Re: Offering Weka Code]
Content-Type: multipart/mixed;
 boundary="------------070703040807080508010708"
X-Remote-Spam-Checker-Version: SpamAssassin 3.0.4-gr0 (2005-06-05) on 
	zombie.scms.waikato.ac.nz
X-Remote-Spam-Level: 
X-Remote-Spam-Status: No, score=-5.7 required=3.0 tests=ALL_TRUSTED,AWL,BAYES_00 
	autolearn=ham version=3.0.4-gr0
Status: RO
Content-Length: 15715
Lines: 414

This is a multi-part message in MIME format.
--------------070703040807080508010708
Content-Type: text/plain; charset=ISO-8859-1; format=flowed
Content-Transfer-Encoding: 7bit

And that should be the last one (at least I can't think of any others)...

Class: weka.gui.visualize.plugins.VisualizePlugin

Cheers, Peter
-- 
Peter Reutemann, Dept. of Computer Science, University of Waikato, NZ
http://www.cs.waikato.ac.nz/~fracpete/           Ph. +64 (7) 858-5174

--------------070703040807080508010708
Content-Type: message/rfc822;
 name="Re: Offering Weka Code.eml"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
 filename="Re: Offering Weka Code.eml"

Return-Path: <cyrus@mail.scms.waikato.ac.nz>
Received: from murder ([unix socket])
	 by mail.scms.waikato.ac.nz (Cyrus v2.2.12-Gentoo) with LMTPA;
	 Thu, 22 Dec 2005 15:04:22 +1300
X-Sieve: CMU Sieve 2.2
Envelope-to: fracpete@cs.waikato.ac.nz
Delivery-date: Thu, 22 Dec 2005 15:04:22 +1300
Received: from mail by zombie.scms.waikato.ac.nz with spam-scanned (Exim 4.52)
	id 1EpFoa-0006wY-3i
	for fracpete@cs.waikato.ac.nz; Thu, 22 Dec 2005 15:04:22 +1300
Received: from mailserv.waikato.ac.nz ([130.217.66.61])
	by zombie.scms.waikato.ac.nz with esmtp (Exim 4.52)
	id 1EpFoa-0006wU-2I
	for fracpete@cs.waikato.ac.nz; Thu, 22 Dec 2005 15:04:20 +1300
Received: from jess.its.waikato.ac.nz (mailserv.waikato.ac.nz [130.217.66.61])
	by mailserv.waikato.ac.nz (8.12.10/8.12.10) with ESMTP id jBM24KaF015013
	for <fracpete@cs.waikato.ac.nz>; Thu, 22 Dec 2005 15:04:20 +1300
Received: (from fracpete@localhost)
	by jess.its.waikato.ac.nz (8.12.10/8.12.10/Submit) id jBM24Jui015011
	for fracpete@cs.waikato.ac.nz; Thu, 22 Dec 2005 15:04:19 +1300
X-Authentication-Warning: jess.its.waikato.ac.nz: fracpete set sender to <pushplay@gmail.com> using -f
X-Envelope-From: pushplay@gmail.com
X-Envelope-To: <fracpete@waikato.ac.nz>
Received: from zproxy.gmail.com (zproxy.gmail.com [64.233.162.197])
	by mailserv.waikato.ac.nz (8.12.10/8.12.10) with ESMTP id jBM24HaF014988
	for <fracpete@waikato.ac.nz>; Thu, 22 Dec 2005 15:04:18 +1300
Received: by zproxy.gmail.com with SMTP id 18so319723nzp
        for <fracpete@waikato.ac.nz>; Wed, 21 Dec 2005 18:04:16 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:in-reply-to:mime-version:content-type:content-transfer-encoding:content-disposition:references;
        b=HDqyY6TURGdUH1rYecQ0WLaOXDPoa2AWjwviZALcwVWkdkUnWSJrhU6oLnNnacZ1tW7u0I73z7qP8nAVOtpzozWB0gUDJz0veekBkvUtG/UcVxwTsiEcAmfNKfxo/gWLJLhtRjsJODObnMJhyuY3HdI82ucGjvJwWeoGF/dMB/I=
Received: by 10.65.148.9 with SMTP id a9mr849323qbo;
        Wed, 21 Dec 2005 18:04:16 -0800 (PST)
Received: by 10.65.156.8 with HTTP; Wed, 21 Dec 2005 18:04:16 -0800 (PST)
Message-ID: <270d01bf0512211804t374ddefby9e6b2bb837a1e29c@mail.gmail.com>
Date: Wed, 21 Dec 2005 19:04:16 -0700
From: Jeffery Grajkowski <pushplay@gmail.com>
Reply-To: grajkows@cs.ualberta.ca
To: Peter Reutemann <fracpete@waikato.ac.nz>
Subject: Re: Offering Weka Code
In-Reply-To: <43A9EF55.606@waikato.ac.nz>
MIME-Version: 1.0
Content-Type: text/plain; charset=ISO-8859-1
Content-Disposition: inline
References: <270d01bf0512071403v5eca7e8foc70574ada2ef547c@mail.gmail.com>
	 <439E08EB.3090509@waikato.ac.nz>
	 <270d01bf0512141407s19302191i3831349cbc5c5dad@mail.gmail.com>
	 <43A0A4B1.5090500@waikato.ac.nz>
	 <270d01bf0512141553n2a7ded5dq78e156d829fcc582@mail.gmail.com>
	 <43A0B154.5030107@waikato.ac.nz>
	 <270d01bf0512141604k1409516fwe1e5ed612d685095@mail.gmail.com>
	 <43A0B3D9.5070807@waikato.ac.nz>
	 <270d01bf0512201222t3bf9cc72jb8043f4687e0db0e@mail.gmail.com>
	 <43A9EF55.606@waikato.ac.nz>
X-MIME-Autoconverted: from quoted-printable to 8bit by mailserv.waikato.ac.nz id jBM24HaF014988
X-Spam-Checker-Version: SpamAssassin 3.0.4-gr0 (2005-06-05) on 
	zombie.scms.waikato.ac.nz
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,RCVD_BY_IP 
	autolearn=ham version=3.0.4-gr0
X-SPF-Result: 
Content-Transfer-Encoding: quoted-printable

Go ahead.  It's your code to attach a copyright to.  Otherwise I would
have put something up there myself.

On 12/21/05, Peter Reutemann <fracpete@waikato.ac.nz> wrote:
> Hey!
>
> Is it actually possible to have the attached copyright (not sure what
> in-kind means in terms of copyright) in the VisualizePlugin class?
> The copyrights for the plugins will be still yours, since they are not
> necessary to build Weka.
> Otherwise, we won't be able to include it, due to problems in case of
> commercialization and stuff like that.
>
> Thanks!
>
> Cheers, Peter
>
> Jeffery Grajkowski wrote:
> > I finally got the in-kind approval.
> >
> > The patch file was generated with diff -u [file I just checked out of
> > dev cvs] [file I worked on] and should patch without any problems.
> > The other file of course goes in weka/gui/visualize/plugin.  I have
> > the ROC/Cost Curve plugin, which I think we'll want to maintain
> > copyright over, but we can still put a file in the plugin repository
> > if/when you create one.
> >
> > I can send you a simple example plugin if you'd like.  It shouldn't b=
e
> > necessary though, the interface is pretty simple.
> >
> > Please email if you have any concerns or comments.
> >
> > --
> > Jeffery Grajkowski
>
> --
> Peter Reutemann, Dept. of Computer Science, University of Waikato, NZ
> http://www.cs.waikato.ac.nz/~fracpete/     +64 (7) 838-4466 Ext. 5174
>
>
> /*
>  *    This program is free software; you can redistribute it and/or mod=
ify
>  *    it under the terms of the GNU General Public License as published=
 by
>  *    the Free Software Foundation; either version 2 of the License, or
>  *    (at your option) any later version.
>  *
>  *    This program is distributed in the hope that it will be useful,
>  *    but WITHOUT ANY WARRANTY; without even the implied warranty of
>  *    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
>  *    GNU General Public License for more details.
>  *
>  *    You should have received a copy of the GNU General Public License
>  *    along with this program; if not, write to the Free Software
>  *    Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.
>  */
>
> /*
>  * VisualizePlugin.java
>  * Copyright (C) 2005 University of Waikato, Hamilton, New Zealand
>  * Written by Jeffery Grajkowski of the AICML
>  *
>  */
>
>
>
>
>


--
Jeffery Grajkowski



--------------070703040807080508010708
Content-Type: message/rfc822;
 name="Attached Message"
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment;
 filename="Attached Message"

Return-Path: <cyrus@mail.scms.waikato.ac.nz>
Received: from murder ([unix socket])
	 by mail.scms.waikato.ac.nz (Cyrus v2.2.12-Gentoo) with LMTPA;
	 Wed, 21 Dec 2005 09:22:53 +1300
X-Sieve: CMU Sieve 2.2
Envelope-to: fracpete@cs.waikato.ac.nz
Delivery-date: Wed, 21 Dec 2005 09:22:53 +1300
Received: from mail by zombie.scms.waikato.ac.nz with spam-scanned (Exim 4.52)
	id 1Eoo0a-00030G-2u
	for fracpete@cs.waikato.ac.nz; Wed, 21 Dec 2005 09:22:53 +1300
Received: from mailserv.waikato.ac.nz ([130.217.66.61])
	by zombie.scms.waikato.ac.nz with esmtp (Exim 4.52)
	id 1Eoo0a-00030C-1K
	for fracpete@cs.waikato.ac.nz; Wed, 21 Dec 2005 09:22:52 +1300
Received: from jess.its.waikato.ac.nz (mailserv.waikato.ac.nz [130.217.66.61])
	by mailserv.waikato.ac.nz (8.12.10/8.12.10) with ESMTP id jBKKMpaF013992
	for <fracpete@cs.waikato.ac.nz>; Wed, 21 Dec 2005 09:22:51 +1300
Received: (from fracpete@localhost)
	by jess.its.waikato.ac.nz (8.12.10/8.12.10/Submit) id jBKKMpWL013989
	for fracpete@cs.waikato.ac.nz; Wed, 21 Dec 2005 09:22:51 +1300
X-Authentication-Warning: jess.its.waikato.ac.nz: fracpete set sender to <pushplay@gmail.com> using -f
X-Envelope-From: pushplay@gmail.com
X-Envelope-To: <fracpete@waikato.ac.nz>
Received: from zproxy.gmail.com (zproxy.gmail.com [64.233.162.198])
	by mailserv.waikato.ac.nz (8.12.10/8.12.10) with ESMTP id jBKKMmaF013847
	for <fracpete@waikato.ac.nz>; Wed, 21 Dec 2005 09:22:48 +1300
Received: by zproxy.gmail.com with SMTP id l1so1630099nzf
        for <fracpete@waikato.ac.nz>; Tue, 20 Dec 2005 12:22:47 -0800 (PST)
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws;
        s=beta; d=gmail.com;
        h=received:message-id:date:from:reply-to:to:subject:in-reply-to:mime-version:content-type:references;
        b=LCN6eFNzU2eCRlvmhMEYgjgGpDhx5eJZIRNlSOu4HTwWYrwM84G+U/PIOCcQl1AnhpyNQeiVD673PWEgUOZl7SR0Hh1VBGcI4CkRoF9pJPnIwXjHe+ErkkwlDdh6V6Wi0OCkoR8jySS/ZgGxXU3jmmMntq1sPgw+fvjJu6BW5jI=
Received: by 10.65.157.12 with SMTP id j12mr4701518qbo;
        Tue, 20 Dec 2005 12:22:47 -0800 (PST)
Received: by 10.65.156.8 with HTTP; Tue, 20 Dec 2005 12:22:47 -0800 (PST)
Message-ID: <270d01bf0512201222t3bf9cc72jb8043f4687e0db0e@mail.gmail.com>
Date: Tue, 20 Dec 2005 13:22:47 -0700
From: Jeffery Grajkowski <pushplay@gmail.com>
Reply-To: grajkows@cs.ualberta.ca
To: Peter Reutemann <fracpete@waikato.ac.nz>
Subject: Re: Offering Weka Code
In-Reply-To: <43A0B3D9.5070807@waikato.ac.nz>
MIME-Version: 1.0
Content-Type: multipart/mixed; 
	boundary="----=_Part_11128_14610202.1135110167363"
References: <270d01bf0512071403v5eca7e8foc70574ada2ef547c@mail.gmail.com>
	 <439DEC9E.8040203@waikato.ac.nz>
	 <270d01bf0512121518l6a410585mc574b513d39f7e7c@mail.gmail.com>
	 <439E08EB.3090509@waikato.ac.nz>
	 <270d01bf0512141407s19302191i3831349cbc5c5dad@mail.gmail.com>
	 <43A0A4B1.5090500@waikato.ac.nz>
	 <270d01bf0512141553n2a7ded5dq78e156d829fcc582@mail.gmail.com>
	 <43A0B154.5030107@waikato.ac.nz>
	 <270d01bf0512141604k1409516fwe1e5ed612d685095@mail.gmail.com>
	 <43A0B3D9.5070807@waikato.ac.nz>
X-Spam-Checker-Version: SpamAssassin 3.0.4-gr0 (2005-06-05) on 
	zombie.scms.waikato.ac.nz
X-Spam-Level: 
X-Spam-Status: No, score=-2.5 required=5.0 tests=BAYES_00,RCVD_BY_IP 
	autolearn=ham version=3.0.4-gr0
X-SPF-Result: 

------=_Part_11128_14610202.1135110167363
Content-Type: text/plain; charset=ISO-8859-1
Content-Transfer-Encoding: quoted-printable
Content-Disposition: inline

I finally got the in-kind approval.

The patch file was generated with diff -u [file I just checked out of
dev cvs] [file I worked on] and should patch without any problems.=20
The other file of course goes in weka/gui/visualize/plugin.  I have
the ROC/Cost Curve plugin, which I think we'll want to maintain
copyright over, but we can still put a file in the plugin repository
if/when you create one.

I can send you a simple example plugin if you'd like.  It shouldn't be
necessary though, the interface is pretty simple.

Please email if you have any concerns or comments.

--
Jeffery Grajkowski

------=_Part_11128_14610202.1135110167363
Content-Type: application/octet-stream; name=ClassifierPanel.java.patch
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="ClassifierPanel.java.patch"

--- weka/gui/explorer/ClassifierPanel.java	2005-10-24 19:15:14.000000000 -0600
+++ ../weka-dev/weka/gui/explorer/ClassifierPanel.java	2005-12-15 10:31:59.000000000 -0700
@@ -31,6 +31,8 @@
 import weka.core.Utils;
 import weka.core.Drawable;
 import weka.core.SerializedObject;
+import weka.core.ClassDiscovery;
+import weka.core.Version;
 import weka.associations.CARuleMiner;
 import weka.classifiers.Classifier;
 import weka.classifiers.Evaluation;
@@ -55,6 +57,7 @@
 import weka.gui.visualize.VisualizePanel;
 import weka.gui.visualize.PlotData2D;
 import weka.gui.visualize.Plot2D;
+import weka.gui.visualize.plugins.VisualizePlugin;
 import weka.gui.ExtensionFileFilter;
 
 import weka.gui.treevisualizer.*;
@@ -64,6 +67,7 @@
 
 import java.util.Random;
 import java.util.Date;
+import java.util.Vector;
 import java.text.SimpleDateFormat;
 import java.awt.FlowLayout;
 import java.awt.BorderLayout;
@@ -1638,7 +1642,7 @@
     }
     resultListMenu.add(visThreshold);
 
-    JMenu visCost = new JMenu("Visualize cost curve");
+    JMenu visCost = new JMenu("Visualize cost curve!");
     if (preds != null && classAtt != null) {
       for (int i = 0; i < classAtt.numValues(); i++) {
 	JMenuItem clv = new JMenuItem(classAtt.value(i));
@@ -1675,6 +1679,42 @@
       visCost.setEnabled(false);
     }
     resultListMenu.add(visCost);
+    
+    JMenu visPlugins = new JMenu("Plugins");
+    Vector pluginsVector = ClassDiscovery.find(VisualizePlugin.class, "weka.gui.visualize.plugins");
+    boolean availablePlugins = false;
+    for (int i=0; i<pluginsVector.size(); i++) {
+      String className = (String)(pluginsVector.elementAt(i));
+      try {
+        if (className.matches(".*\\.VisualizePlugin"))
+          continue;
+				VisualizePlugin plugin = (VisualizePlugin)(Class.forName(className).newInstance());
+				if (plugin==null)
+					continue;
+				availablePlugins = true;
+        JMenuItem pluginMenuItem = plugin.getVisualizeMenuItem(preds, classAtt);
+        Version version = new Version();
+        if (pluginMenuItem != null) {
+          if (version.compareTo(plugin.getMinVersion()) < 0)
+            pluginMenuItem.setText(pluginMenuItem.getText() + " (weka outdated)");
+          if (version.compareTo(plugin.getMaxVersion()) >= 0)
+            pluginMenuItem.setText(pluginMenuItem.getText() + " (plugin outdated)");
+          visPlugins.add(pluginMenuItem);
+        }
+			}
+			catch (ClassNotFoundException cnfe) {
+				//System.out.println("Visualize plugin ClassNotFoundException " + cnfe.getMessage());
+			}
+			catch (InstantiationException ie) {
+				//System.out.println("Visualize plugin InstantiationException " + ie.getMessage());
+			}
+			catch (IllegalAccessException iae) {
+				//System.out.println("Visualize plugin IllegalAccessException " + iae.getMessage());
+			}
+    }
+    if (!availablePlugins)
+      visPlugins.setEnabled(false);
+    resultListMenu.add(visPlugins);
 
     resultListMenu.show(m_History.getList(), x, y);
   }





------=_Part_11128_14610202.1135110167363
Content-Type: text/x-java; name=VisualizePlugin.java; charset=us-ascii
Content-Transfer-Encoding: 7bit
Content-Disposition: attachment; filename="VisualizePlugin.java"

/*
 *    VisualizePlugin.java
 *    Written by Jeffery Grajkowski of the AICML
 *    Contributed in kind to the Weka project.
 *
 */


package weka.gui.visualize.plugins;

import weka.core.FastVector;
import weka.core.Attribute;
import javax.swing.JMenuItem;

/**
 * Interface implemented by classes loaded dynamically to
 * visualize classifier results in the explorer.
 *
 * @author Jeffery Grajkowski (grajkows@cs.ualberta.ca)
 * @version $Revision: 1.1 $
 */
public interface VisualizePlugin {
	
	/**
	 * Get a JMenu or JMenuItem which contain action listeners
	 * that perform the visualization, using some but not
	 * necessarily all of the data.  Exceptions thrown because of
	 * changes in Weka since compilation need to be caught by
	 * the implementer.
	 *
	 * @see NoClassDefFoundError
	 * @see IncompatibleClassChangeError
	 *
	 * @param  preds predictions
	 * @param  classAtt class attribute
	 * @return menuitem for opening visualization(s), or null
	 *         to indicate no visualization is applicable for the input
	 */
	JMenuItem getVisualizeMenuItem(FastVector preds, Attribute classAtt);
	
	/**
	 * Get the minimum version of Weka, inclusive, the class
	 * is designed to work with.  eg: <code>3.5.0</code>
	 */
	String getMinVersion();
	
	/**
	 * Get the maximum version of Weka, exclusive, the class
	 * is designed to work with.  eg: <code>3.6.0</code>
	 */
	String getMaxVersion();
	
	/**
	 * Get the specific version of Weka the class is designed for.
	 * eg: <code>3.5.1</code>
	 */
	String getDesignVersion();
}




------=_Part_11128_14610202.1135110167363--



--------------070703040807080508010708--

